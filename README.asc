Executive summary
-----------------

Cassandra is a distributed key-value database system. Cache performance can directly affect the performance of whole system. A good cache system with high hit rates can reduce the number of queries to the database and therefore can reduce the latency.

In cassandra-2.2, the system uses Google's "concurrentlinkedhashmap" to implement least recently used (LRU) cache policy. In our project, we changed the cache policy to least frequently used (LFU). We tested the correctness of our LFU cache and provided the rationale why LFU performs better than LRU by performance tests.

For more information, see http://cassandra.apache.org/[the Apache Cassandra web site].

Requirements
------------
. Java >= 1.7 (OpenJDK and Oracle JVMS have been tested)
. Ant

Getting started
---------------

git clone https://github.com/qfu/cassandra.git

git checkout "cassandra-2.2"
(This is the branch where we implemented the LFU cache and demonstrated its performance)

git checkout "LRUTest"
(This is the branch where cassandra provides the LRU cache and demonstrated its performance)

(sudo) ant build

or 

(sudo) ant generate-idea-files

You can use IntelliJ to check our code and run test cases in branch "cassandra-2.2"

- Go to "cassandra/src/java/org/apache/cassandra/cache/LFUCache" to check our LFU implementation

- Go to "cassandra/test/unit/org/apache/cassandra/cache/CachePerformanceTest" and run the test cases
  Results are stored in "hit-rates-LRU"

If you use terminal lines, you can run

ant testsome -Dtest.name=org.apache.cassandra.cache.CachePerformanceTest -Dtest.methods=testSerializingCache

